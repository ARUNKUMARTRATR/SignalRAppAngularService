// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignalRAppAngular.Data;

namespace SignalRAppAngular.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SignalRAppAngular.Model.ChatBotCollect", b =>
                {
                    b.Property<int>("CollectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BotId")
                        .HasColumnType("int");

                    b.Property<string>("CollectDecription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFinalCollect")
                        .HasColumnType("bit");

                    b.Property<string>("OnCompleteRedirectMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnCompleteRedirectURI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentCollectId")
                        .HasColumnType("int");

                    b.HasKey("CollectId");

                    b.ToTable("ChatBotCollectInfo");
                });

            modelBuilder.Entity("SignalRAppAngular.Model.ChatBotCollectQuestion", b =>
                {
                    b.Property<long>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BotId")
                        .HasColumnType("int");

                    b.Property<int>("CollectId")
                        .HasColumnType("int");

                    b.Property<string>("DecisionIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OptionGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ParentQuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("ChatBotCollectQuestionInfo");
                });

            modelBuilder.Entity("SignalRAppAngular.Model.ChatBotConversation", b =>
                {
                    b.Property<long>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BotId")
                        .HasColumnType("int");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelSID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConversationId");

                    b.ToTable("ChatBotConversationInfo");
                });

            modelBuilder.Entity("SignalRAppAngular.Model.ChatBotConversationDetail", b =>
                {
                    b.Property<long>("ConversationDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ConversationHeaderId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConversationDetailId");

                    b.ToTable("ChatBotConversationDetailInfo");
                });

            modelBuilder.Entity("SignalRAppAngular.Model.ChatBotConversationHeader", b =>
                {
                    b.Property<long>("ConversationHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CollectId")
                        .HasColumnType("int");

                    b.Property<long>("ConversationId")
                        .HasColumnType("bigint");

                    b.Property<string>("DecisionIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseJSON")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConversationHeaderId");

                    b.ToTable("ChatBotConversationHeaderInfo");
                });

            modelBuilder.Entity("SignalRAppAngular.Model.ChatBotQuestionOptionGroup", b =>
                {
                    b.Property<long>("OptionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OptionGroupId");

                    b.ToTable("ChatBotQuestionOptionGroupInfo");
                });

            modelBuilder.Entity("SignalRAppAngular.Model.ChatBotQuestionOptionGroupCode", b =>
                {
                    b.Property<long>("OptionCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OptionGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("OptionCodeId");

                    b.ToTable("ChatBotQuestionOptionGroupCodeInfo");
                });

            modelBuilder.Entity("SignalRAppAngular.Models.ChatBotMaster", b =>
                {
                    b.Property<int>("BotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BotDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BotId");

                    b.ToTable("ChatBotMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
